{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+","seperator":"[\\s\\-\\.]"},"docs":[{"location":"","text":"Welcome to the SpamBlockers Documentation! The documentation is still being working out as we write out stuff. The documentation includes both Telegram Bot and API docs without leaving the site. Table of Contents \u00b6 Telegram Bot Setup your instance Commands Reference Customizing the bot API Documentation Setting up your server Authenticating yourself Permissions Pulling Banlists Miscellanenous API Wrappers Contribute \u00b6 We're been looking","title":"Home"},{"location":"#table_of_contents","text":"Telegram Bot Setup your instance Commands Reference Customizing the bot API Documentation Setting up your server Authenticating yourself Permissions Pulling Banlists Miscellanenous API Wrappers","title":"Table of Contents"},{"location":"#contribute","text":"We're been looking","title":"Contribute"},{"location":"api-docs/","text":"Welcome to the API documentation of SpamBlockersBot! Scope of the API Docs \u00b6 The scope of the API documentaion covers both the hosted version at api.spamblockers.bot and self-hosted ones. Table of Contents \u00b6 Setting up your own API server Authenticating yourself Permissions Pulling Banlists Miscellanenous API Wrappers Credits \u00b6 Adopted from SpamWatch docs and special thanks to @SitiSchu .","title":"API Docs: Home"},{"location":"api-docs/#scope_of_the_api_docs","text":"The scope of the API documentaion covers both the hosted version at api.spamblockers.bot and self-hosted ones.","title":"Scope of the API Docs"},{"location":"api-docs/#table_of_contents","text":"Setting up your own API server Authenticating yourself Permissions Pulling Banlists Miscellanenous API Wrappers","title":"Table of Contents"},{"location":"api-docs/#credits","text":"Adopted from SpamWatch docs and special thanks to @SitiSchu .","title":"Credits"},{"location":"api-docs/authentication/","text":"Authenticating Yourself \u00b6 Note : Replace the $SPAMBLOCKERS_API_TOKEN variable with your own API token generated from the bot. How to generate tokens? \u00b6 From the bot An Telegram account and a Telegram client is required to continue. Start an instance of SpamBlockersBot in Telegram, for example, this one . Send a /generate_token command and wait for the bot to generate your key. You'll received your newly-generated API token that's valid for a API server and it looks like this: API Token Generated User ID: 777000 API Token: randomstringhere Admin Permissions Granted: false API Endpoint: https://api.spamblockers.bot API Docs: https://docs.spamblockers.bot/api-docs Keep this token secret. If you accidently shared this token revoke with /retire_token and generate a new one. With HTTP Request to API An instance admin of SpamBlockersBot with his/her own API token must do this. Grab the requested user's ID. This is required for checking permissions In a console, enter the following command. The generateApiToken below will returns 204 No Content . ## Replace 'your-api-server-here.tld' to your API server ## that specified by the instance you're using when ## your token was generated. ## Also replace 777000 with the target user's ID. curl -x POST https://your-api-server-here.tld/token?id = 777000 & grantApiSudoPermissions = false X-SPAMBLOCKERS-API-TOKEN: $SPAMBLOCKERS_API_TOKEN ## For example in SpamBlockersBot API curl -x POST https://api.spamblockers.bot/token?id = 777000 & grantApiSudoPermissions = false X-SPAMBLOCKERS-API-TOKEN: $SPAMBLOCKERS_API_TOKEN To get the token for, use the getUserApiTokens method by entering the following command. ## Replace 'your-api-server-here.tld' to your API server ## that specified by the instance you're using when ## your token was generated. ## Also replace 777000 with the target user's ID. curl -x POST https://your-api-server-here.tld/tokens/777000 X-SPAMBLOCKERS-API-TOKEN: $SPAMBLOCKERS_API_TOKEN ## For example in SpamBlockersBot curl -x POST https://api.spamblockers.bot/tokens/777000 X-SPAMBLOCKERS-API-TOKEN: $SPAMBLOCKERS_API_TOKEN From the API wrappers import spamblockersapi import os API_TOKEN = os . get ( SPAMBLOCKERS_API_TOKEN ) client = spamblockersapi . Client ( API_KEY ) client . generateApiToken ( 777000 ) token = client . getUserApiTokens ( 777000 ) const SpamBlockersApi = require ( '@SpamBlockers/API' ); const API_KEY = process . env . SPAMBLOCKERS_API_TOKEN const client = new SpamBlockersApi . Client ( API_KEY ); client . generateApiToken ( 777000 ); let token = client . getUserApiToken ( 777000 ); What the API Expects \u00b6 The API expects your API token to included in all requests to the server in form of a header like X-SPAMBLOCKERS-API-TOKEN: $SPAMBLOCKERS_API_TOKEN . If you are contacting the API server manually in a browser, an extension that can modify headers is required to make it successfully receives the request.","title":"Authenticating Yourself"},{"location":"api-docs/authentication/#authenticating_yourself","text":"Note : Replace the $SPAMBLOCKERS_API_TOKEN variable with your own API token generated from the bot.","title":"Authenticating Yourself"},{"location":"api-docs/authentication/#how_to_generate_tokens","text":"","title":"How to generate tokens?"},{"location":"api-docs/authentication/#what_the_api_expects","text":"The API expects your API token to included in all requests to the server in form of a header like X-SPAMBLOCKERS-API-TOKEN: $SPAMBLOCKERS_API_TOKEN . If you are contacting the API server manually in a browser, an extension that can modify headers is required to make it successfully receives the request.","title":"What the API Expects"},{"location":"api-docs/banlist/","text":"Querying the Banlist \u00b6 Getting a Specific Ban \u00b6 With API Wrappers import spamblockersapi import os # Assume that you place your API token as a environment variable. API_KEY = os . get ( SPAMBLOCKERS_API_TOKEN ) client = spamblockersapi . Client ( API_KEY ) ban = client . queryBanStatus ( 777000 ) const SpamBlockersApi = require ( '@SpamBlockers/API' ); // Assume that you place your API token as a environment variable. const API_TOKEN = process . env . SPAMBLOCKERS_API_TOKEN ; const client = new SpamBlockersApi . Client ( API_TOKEN ); let ban = client . queryBanStatus ( 777000 ); When request was received from API wrapper, the resulting response will look like: < BanQuery : id : 777000 , isBanned : true , banned_by : 10395820583 , reason : 'Created Telegram' , timestamp : 1579919357 > banQuery : { id : 777000 , isBanned : true , banned_by : 10395820583 , reason : 'Created Telegram' , timestamp : 1579919357 , } With HTTP Request to API # Notes: ## Replace 'api.spamblockers.bot' with the domain of the API server of the instance where your token was generated. ## Replace $id with a real user ID. curl -X GET https://api.spamblockers.bot/banlist/ $id X-SPAMBLOCKERS-APi-TOKEN: $SPAMBLOCKERS_API_TOKEN When an HTTP request was received, the resulting response will like like this: { \"ok\" : true , \"description\" : \"Successfully found the user from DB\" , \"id\" : 777000 , \"isBanned\" : true , \"banned_by\" : 10395820583 , \"reason\" : \"Created Telegram\" , \"timestamp\" : \"1579919357\" } Parameters Name Type Description Required $id String or interger ID of a Telegram user. true Banning a user from API \u00b6 When a user was banned from the API, it might take a little while for the bot to ban across groups where the bot can ban hammer. With API Wrappers import spamblockersapi import os","title":"Querying the Banlist"},{"location":"api-docs/banlist/#querying_the_banlist","text":"","title":"Querying the Banlist"},{"location":"api-docs/banlist/#getting_a_specific_ban","text":"","title":"Getting a Specific Ban"},{"location":"api-docs/banlist/#banning_a_user_from_api","text":"When a user was banned from the API, it might take a little while for the bot to ban across groups where the bot can ban hammer.","title":"Banning a user from API"},{"location":"api-docs/faq/","text":"Frequently Asked Questions about the API \u00b6 We had been complied Is the API be production-ready? When will can I use it on production? \u00b6 Not yet. The API is being under heavy testing and","title":"FAQs"},{"location":"api-docs/faq/#frequently_asked_questions_about_the_api","text":"We had been complied","title":"Frequently Asked Questions about the API"},{"location":"api-docs/faq/#is_the_api_be_production-ready_when_will_can_i_use_it_on_production","text":"Not yet. The API is being under heavy testing and","title":"Is the API be production-ready? When will can I use it on production?"},{"location":"api-docs/packages/","text":"Packages for the APi \u00b6 Like the API itself, the API wrappers are currently under heavy developement. Official API Wrappers \u00b6 Official API Wrappers are adopted from SpamWatch's official ones, the difference is how the API server response to an request and its additional miscelleaneous stuff. Python ## With Pip pip3 install spamblockersapi ## With Pip with CLI included pip3 install spamblockerscli Node.js # Using the API Wrapper package ## With Yarn yarn install @SpamBlockers/API ## With npm npm install @SpamBlockers/API # With CLI interface ## with Yarn yarn install @SpamBlockers/CLI ## with npm npm install @SpamBlockers/CLI Official CLIs \u00b6 We're been working out for CLI packages and we'll notify you once when Using the API Wrappers \u00b6 Usage of the official API wrappers are documentated in the documentation website. Just look the With the API Wrapper or With the CLI section.","title":"Packages for the APi"},{"location":"api-docs/packages/#packages_for_the_api","text":"Like the API itself, the API wrappers are currently under heavy developement.","title":"Packages for the APi"},{"location":"api-docs/packages/#official_api_wrappers","text":"Official API Wrappers are adopted from SpamWatch's official ones, the difference is how the API server response to an request and its additional miscelleaneous stuff.","title":"Official API Wrappers"},{"location":"api-docs/packages/#official_clis","text":"We're been working out for CLI packages and we'll notify you once when","title":"Official CLIs"},{"location":"api-docs/packages/#using_the_api_wrappers","text":"Usage of the official API wrappers are documentated in the documentation website. Just look the With the API Wrapper or With the CLI section.","title":"Using the API Wrappers"},{"location":"tg/commands-reference/","text":"","title":"Commands Reference"},{"location":"tg/setup/","text":"TL;DR \u00b6 Clone the Git repository to your repository. Edit the .env.sample file and save it as .env . Create an admins.json file containning an array of user IDs of your trusted admins. Install dependencies with npm i . Start the bot with npm start . Optionally set up your API server also. The Long text \u00b6 Check your version and clone the whole project ## Check version and update when needed. node -v # v12.14.1 npm -v #v6.14.2 git --version # git version 2.27.0.windows.1 ## Clone the project git clone https://github.com/AndrewLaneX/SpamBlockersBot.git SpamBlockersBot-core ## Open your directory cd SpamBlockersBot-core Copying sample file, edit and save to .env ## Copy the file. cp .env.sample .env ## Edit the file nano .env This what looks like after you do some editing on your .env file. Make sure you saved your work before exiting. To save in nano , press Ctrl + O and hit Enter . You'll greeted by the [ Wrote X lines ] after pressing Enter. Press Ctrl+X to exit. Install dependencies \u00b6 npm i # alias of 'npm install' ## [...] ## audited X packages in X s","title":"Setting up bot"},{"location":"tg/setup/#tldr","text":"Clone the Git repository to your repository. Edit the .env.sample file and save it as .env . Create an admins.json file containning an array of user IDs of your trusted admins. Install dependencies with npm i . Start the bot with npm start . Optionally set up your API server also.","title":"TL;DR"},{"location":"tg/setup/#the_long_text","text":"","title":"The Long text"},{"location":"tg/setup/#install_dependencies","text":"npm i # alias of 'npm install' ## [...] ## audited X packages in X s","title":"Install dependencies"}]}